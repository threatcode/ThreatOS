name: Build and Test

on:
  push:
    branches:
      - main

env:
  BASE_IMAGES: "threatos-rolling threatos-last-release threatos-dev"
  EXTRA_IMAGES: "threatos-bleeding-edge threatos-experimental"
  ARCHS: "amd64 arm64 armhf armel i386"

jobs:
  build-rootfs:
    runs-on: ubuntu-latest

    outputs:
      artifacts: ${{ steps.store_artifacts.outputs.artifacts }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build RootFS
        id: build-rootfs
        run: |
          # Add your build-rootfs steps here
          # ...

      - name: Store Artifacts
        id: store_artifacts
        run: |
          echo "Artifacts:"
          ls -al
          echo "::set-output name=artifacts::*.tar.gz *.release.version"

  build-docker-images:
    needs: build-rootfs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Images
        run: |
          # Add your build-docker-images steps here
          # ...

  test-docker-images:
    needs: build-docker-images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Test Docker Images
        run: |
          # Add your test-docker-images steps here
          # ...

  publish-docker-images:
    needs: test-docker-images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Publish Docker Images
        run: |
          # Add your publish-docker-images steps here
          # ...
